<div class="my-5">
    <h1 class="text-center mb-5">도서검색</h1>
    <div class="row justify-content-end">
        <form name="frm" class="col-md-4 mb-3 mx-4">
            <div class="input-group">
                <input name="query" class="form-control">
                <button class="btn btn-secondary">검색</button>
            </div>
        </form>
    </div>
    <div id="div_books"></div>
    <div class="text-center">
        <button id="prev" class="btn btn-secondary">이전</button>
        <span id="span_page" class="mx-3"></span>
        <button id="next" class="btn btn-secondary">다음</button>
    </div>
</div>

<!--도서검색 템플릿-->
<script id="temp_books" type="x-handlebars-template">
    <table class="table table-striped align-middle">
        <tr>
            <td colspan="5">
                <input type="checkbox" id="all">
            </td>
            <td><a class="btn btn-warning btn-sm" id="save">선택저장</a></td>
        </tr>
        {{#each documents}}
        <tr>
            <td><input type="checkbox" class="chk" book="{{toString @this}}"></td>
            <td><img idx="{{@index}}" src="{{isImage thumbnail}}" width="50" style="cursor:pointer"></td>
            <td>{{title}}</td>
            <td>{{authors}}</td>
            <td>￦{{fmtPrice price}}</td>
            <td><button class="btn btn-warning btn-sm" book="{{toString @this}}">도서저장</button></td>
        </tr>
        <%-include("modal.ejs")%>
        {{/each}}
    </table>
</script>

<script>
    Handlebars.registerHelper("toString", function(book) {
        return JSON.stringify(book);
    });

    Handlebars.registerHelper("isImage", function(image) {
        if(image) {
            return image;
        } else {
            return "http://via.placeholder.com/170x240";
        }
    });

    Handlebars.registerHelper("fmtPrice", function(price) {
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
</script>

<script>
    let query = '소설';
    let page = 1;
    getBooks();

    // 선택저장 버튼을 클리한 경우
    $("#div_books").on("click", "#save", function() {
        const chk = $("#div_books .chk:checked").length;
        if(chk==0) {
            alert("저장할 도서를 선택해주세요!")
            return;
        }

        if(confirm(chk + "개 도서를 저장하시겠습니까?")) {
            let count=0;
            $("#div_books .chk:checked").each(function() {
                const book=JSON.parse($(this).attr("book"));
                const authors = book.authors.join();
                console.log(book, authors);
                $.ajax({
                    type:"post",
                    url:"/books/search/insert",
                    data:{...book, authors},
                    success:function(data) {
                        if(data==0) count++;
                    }
                });
            });
            setTimeout(function(){
                alert(count + "개 도서가 저장되었습니다.");
                $("#div_books .chk").prop("checked", false);
                $("#div_books #all").prop("checked", false);
            }, 1000);
        }
    });

    // 전체선택 체크박스를 클릭한 경우
    $("#div_books").on("click", "#all", function() {
        if($(this).is(":checked")) {
            $("#div_books .chk").prop("checked", true);
        } else {
            $("#div_books .chk").prop("checked", false);
        }
    });

    // 각 행의 체크박스를 클릭한 경우
    $("#div_books").on("click", ".chk", function() {
        const all = $("#div_books .chk").length;
        const chk = $("#div_books .chk:checked").length;
        if(all == chk) {
            $("#div_books #all").prop("checked", true);
        } else {
            $("#div_books #all").prop("checked", false);
        }
    })

    // 도서 저장 버튼을 클릭한 경우
    $("#div_books").on("click", "button", function() {
        const book = JSON.parse($(this).attr("book"));
        const authors = book.authors.join(); // 작가가 배열로 저장되어 있어서 풀어서 데이터를 넘겨줘야 한다.

        if(confirm("해당 도서를 등록하시겠습니까?")) {
            $.ajax({
                type:"post",
                url:"/books/search/insert",
                data:{...book, authors},
                success:function(data) {
                    if(data==0) {
                        alert("도서가 등록되었습니다.");
                    } else {
                        alert("이미 등록된 도서입니다.");
                    }
                }
            });
        }
    });

    // 책 썸네일을 클릭한 경우
    $("#div_books").on("click", "img", function() {
        const idx = $(this).attr("idx");
        $("#modal" + idx).modal("show");
    });

    $("#next").on("click", function () {
        page++;
        getBooks();
    })

    $("#prev").on("click", function () {
        page--;
        getBooks();
    })

    $(frm).on("submit", function (e) {
        e.preventDefault();
        page = 1;
        query = $(frm.query).val();
        if (query == "") {
            alert("검색어를 입력해주세요.");
            $(frm.query).focus();
        } else {
            getBooks();
        }
    });

    getBooks();
    function getBooks() {
        /* 페이지가 변하지 않으면서 데이터를 주고 받을 수 있게 된다 */
        $.ajax({
            type: "get",
            url: "https://dapi.kakao.com/v3/search/book?target=title",
            headers: { "Authorization": "KakaoAK d98342bfb3d10bd8a8d18f10982fe1c8" },
            data: { query: query, page: page, size: 5 },
            success: function (data) {
                console.log(data);
                const temp = Handlebars.compile($("#temp_books").html());
                $("#div_books").html(temp(data));
                const last = Math.ceil(data.meta.pageable_count / 5);
                $("#span_page").html(`${page}/${last}`);
                //페이지가 1페이지인 경우
                if (page == 1) $("#prev").attr("disabled", true); // attr <- 속성
                else $("#prev").attr("disabled", false);
                //페이지가 마지막인 경우
                if (data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>