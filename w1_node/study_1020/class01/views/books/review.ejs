<div>
    <button id="btn-review" class="btn btn-secondary w-100 my-5">리뷰작성</button>
    <div id="div-write" style="display: none;">
        <textarea id="contents" class="form-control" rows="5" placeholder="내용을 입력하세요."></textarea>
        <div class="text-end mt-2 mb-5">
            <button id="btn-save" class="btn btn-warning btn-sm">등록</button>
        </div>
    </div>

    <div id="div_review"></div>
    <div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>

<script id="temp_review" type="x-handlebar-template">
    {{#each .}}
        <div class="row">
            <div class="col-lg-1 col-md-2 my-3 text-center">
                <img class="rounded-circle" id="photo" src="{{isPhoto photo}}" width="30px">
                <div>{{uname}}</div>
            </div>
            <!--보기-->
            <div class="col display{{rid}} ps-0 pe-4">
                <div class="text-end pe-2" style="color:gray; font-size:0.8rem;">{{fmtdate}}</div>
                <div class="ellipsis2 contents" style="cursor:pointer">
                    [{{rid}}] {{contents}}
                </div>
                <div class="text-end my-2 pe-2" style={{show uid}}>
                    <button class="btn-update btn btn-warning btn-sm" rid={{rid}}>수정</button>
                    <button class="btn-delete btn btn-danger btn-sm" rid="{{rid}}">삭제</button>
                </div>
            </div>
            <!--수정-->
            <div class="col update{{rid}}" style="display: none;">
                <div class="text-end pe-2" style="color:gray; font-size:0.8rem;">{{fmtdate}}</div>
                <div>
                    <textarea id="contents{{rid}}" class="form-control" rows="5">{{contents}}</textarea>
                </div>
                <div class="text-end my-2 pe-2" style={{show uid}}>
                    <button rid="{{rid}}" class="btn-save btn btn-primary btn-sm">저장</button>
                    <button class="btn-cancel btn btn-secondary btn-sm" rid="{{rid}}" contents="{{contents}}">취소</button>
                </div>
            </div>
        </div>
        <hr>
    {{/each}}
</script>

<script>
    Handlebars.registerHelper("show", function(uid) {
        if(uid!=sessionStorage.getItem("uid")) {
            return "display:none;";
        }
    });

    Handlebars.registerHelper("isPhoto", function (photo) {
        if (photo) {
            return "/upload/photo/" + photo;
        } else {
            return "http://via.placeholder.com/50x50";
        }
    });
</script>

<script>
    let page = 1;
    getTotal();

    // 댓글 저장 버튼을 클릭한 경우
    $("#div_review").on("click", ".btn-save", function(){
        const rid=$(this).attr("rid");
        const contents=$("#div_review #contents" + rid).val();
        // alert(contents);
        if(!confirm(`${rid}번 리뷰를 수정하시겠습니까?`)) return;
        $.ajax({
            type: "post",
            url: "/review/update",
            data: {rid, contents},
            success:function() {
                getTotal();
            }
        });
    });

    // 댓글 취소 버튼을 클릭한 경우
    $("#div_review").on("click", ".btn-cancel", function() {
        const rid = $(this).attr("rid");
        $("#div_review .display" + rid).toggle();
        $("#div_review .update" + rid).toggle();

        const contents=$(this).attr("contents");
        $("#div_review #contents" + rid).val(contents);
    });

    // 댓글 수정 버튼을 클릭한 경우
    $("#div_review").on("click", ".btn-update", function() {
        const rid = $(this).attr("rid");

        $("#div_review .display" + rid).toggle();
        $("#div_review .update" + rid).toggle();
    });

    // 각 행의 삭제 버튼을 클릭한 경우
    $("#div_review").on("click", ".btn-delete", function(){
        const rid = $(this).attr("rid");
        if(!confirm(`${rid}번 리뷰를 삭제하실래요??`)) return;
        $.ajax({
            type: "post",
            url: "/review/delete",
            data: {rid},
            success:function(){
                getTotal();
            }
        });
    });

    // 리뷰 작성 버튼을 클릭한 경우
    $("#btn-review").on("click", function () {
        sessionStorage.setItem("target", "/books/info?bid=<%=book.bid%>");
        location.href = "/users/login";
    });

    // 리뷰 등록 버튼을 누른 경우
    $("#btn-save").on("click", function () {
        const contents = $("#contents").val();
        if (contents == "") {
            alert("내용을 입력하세요.");
            $("#contents").focus();
            return;
        }

        $.ajax({
            type: "post",
            url: "/review/insert",
            data: { bid: "<%=book.bid%>", uid: sessionStorage.getItem("uid"), contents },
            success: function (data) {
                getTotal();
                $("#contents").val("");
            }
        });
    });

    // 댓글 내용을 클릭한 경우
    if (sessionStorage.getItem("uid")) {
        $("#btn-review, #div-write").toggle();
    }

    $("#div_review").on("click", ".contents", function () {
        $(this).toggleClass("ellipsis2");
    });


    function getTotal() {
        $.ajax({
            type: "get",
            url: "/review/count",
            data: { bid: "<%=book.bid%>" },
            success: function (data) {
                if (data <= 5) {
                    $("#pagination").hide();
                } else {
                    $("#pagination").show();
                }
                const totalPages = Math.ceil(data / 5);
                $("#pagination").twbsPagination("changeTotalPages", totalPages, page)
            }
        });
    }

    function getReview() {
        $.ajax({
            type: "get",
            url: "/review/list.json",
            data: { bid: "<%=book.bid%>", page },
            success: function (data) {
                // console.log(data);
                const temp = Handlebars.compile($("#temp_review").html());
                $("#div_review").html(temp(data));
            }
        });
    }

    $('#pagination').twbsPagination({
        totalPages: 25, //총 페이지 번호 수
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
        startPage: 1, // 시작 시 표시되는 현재 페이지
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
        first: '<i class="bi bi-chevron-double-left"></i>', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
        prev: '<i class="bi bi-caret-left-fill"></i>', // 이전 페이지 버튼에 쓰여 있는 텍스트
        next: '<i class="bi bi-caret-right-fill"></i>', // 다음 페이지 버튼에 쓰여 있는 텍스트
        last: '<i class="bi bi-chevron-double-right"></i>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
        onPageClick: function (event, clickPage) {
            page = clickPage;
            getReview();
        }
    });
</script>