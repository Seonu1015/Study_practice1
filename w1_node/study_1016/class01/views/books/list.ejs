<div class="my-5">
    <h1 class="text-center mb-5">도서 상품 목록</h1>
    <div class="mb-3">전체 도서 : <span id="total"></span></div>
    <div id="div_books"></div>
    <div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>

<script id="temp_books" type="x-handlebars-template">
    <table class="table table-striped align-middle">
        <tr>
            <td colspan="6">
                <input id="all" type="checkbox" id="all">
            </td>
            <td class="text-end">
                <a class="sel-delete btn btn-danger btn-sm">선택삭제</a>
            </td>
        </tr>
        {{#each .}}
        <tr>
            <td><input class="chk" bid="{{bid}}" type="checkbox"></td>
            <td width="5%">{{bid}}</td>
            <td width="30%"><div class="ellipsis">{{title}}</div></td>
            <td width="5%">{{price}}</td>
            <td width="10%"><div class="ellipsis">{{authors}}</div></td>
            <td width="40%"><div class="ellipsis">{{contents}}</div></td>
            <td class="text-end"><button bid="{{bid}}" class="btn-delete btn btn-danger btn-sm">도서삭제</button></td>
        </tr>
        {{/each}}
        <tr>
    </table>
</script>

<script>
    let page=1;
    // getBooks();
    getTotal();

    // 선택삭제 버튼을 클릭한 경우
    $("#div_books").on("click", ".sel-delete", function() {
        const chk = $("#div_books .chk:checked").length;
        if (chk==0) {
            alert("삭제할 도서를 선택해주세요!");
            return;
        }

        if(!confirm(`${chk}개 도서를 삭제하시겠습니까?`)) return;
        
        $("#div_books .chk:checked").each(function() {
            const bid = $(this).attr("bid");
            alert(bid);

            $.ajax({
                type:"post",
                url:"/books/delete",
                data: {bid},
                success:function(){
                    getTotal();
                }
            });
        });
    });

    // 전체선택 체크박스를 클릭한 경우
    $("#div_books").on("click", "#all", function() {
        if($(this).is(":checked")) {
            $("#div_books .chk").prop("checked", true);
        } else {
            $("#div_books .chk").prop("checked", false);
        }
    });

    // 각 행의 체크박스를 클릭한 경우
    $("#div_books").on("click", ".chk", function(){
        const all = $("#div_books .chk").length;
        const chk = $("#div_books .chk:checked").length;
        if(all == chk) {
            $("#div_books #all").prop("checked", true);
        } else {
            $("#div_books #all").prop("checked", false);
        }
    });

    // 각 행의 삭제 버튼을 누른 경우
    $("#div_books").on("click", ".btn-delete", function(){
        const bid = $(this).attr("bid");
        if(!confirm(bid + "번 도서를 삭제하실래요?")) return;
        $.ajax({
            type: "post",
            url: "/books/delete",
            data: {bid:bid},
            success:function() {
                alert("도서가 삭제되었습니다.");
                getTotal();
            }
        });
    });

    // 전체 도서 개수
    function getTotal() {
        $.ajax({
            type:"get",
            url:"/books/count",
            success:function(data) {
                $("#total").html((data.total) + "권");
                const totalPages = Math.ceil(data.total/5);
                $("#pagination").twbsPagination("changeTotalPages", totalPages, page)
            }
        });
    }

    function getBooks() {
        $.ajax({
            type:'get',
            url:'/books/list.json',
            data: {page},
            success:function(data) {
                // console.log(data);
                const temp=Handlebars.compile($("#temp_books").html());
                $("#div_books").html(temp(data));
            }
        });
    }

    $('#pagination').twbsPagination({
        totalPages:10, //총 페이지 번호 수
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
        startPage : 1, // 시작 시 표시되는 현재 페이지
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true)
        first : '<i class="bi bi-caret-left-square-fill"></i>', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
        prev : '<i class="bi bi-caret-left-fill"></i>', // 이전 페이지 버튼에 쓰여 있는 텍스트
        next : '<i class="bi bi-caret-right-fill"></i>', // 다음 페이지 버튼에 쓰여 있는 텍스트
        last : '<i class="bi bi-caret-right-square-fill"></i>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
        onPageClick: function (event, clickPage) {
            page=clickPage;
            getBooks();
        }
    });
</script>