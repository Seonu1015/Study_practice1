<div class="my-5 row justify-content-center">
    <h1 class="text-center mb-5">회원가입</h1>

    <!--submit을 하면 insert의 post로 가겠다, 같은 페이지 내이므로 action="/users/insert"는 생략 가능!-->
    <form name="frm" class="col-md-8 card p-3" method="post" action="/users/insert">
        <div class="input-group mb-3">
            <span class="input-group-text">아이디</span>
            <input name="uid" class="form-control">
            <button id="check" class="btn btn-secondary" type="button">중복체크</button>
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">비밀번호</span>
            <input name="upass" class="form-control" type="password">
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">이름</span>
            <input name="uname" class="form-control">
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">전화번호</span>
            <input name="phone" class="form-control">
        </div>
        <div class="input-group mb-1">
            <span class="input-group-text">주소</span>
            <input name="address1" class="form-control">
            <button id="search" class="btn btn-secondary" type="button">주소검색</button>
        </div>
        <div class="input-group mb-3">
            <input name="address2" class="form-control" placeholder="상세주소">
        </div>

        <div class="text-center my-3">
            <button class="btn btn-secondary">등록</button>
            <button class="btn btn-danger" type="reset">취소</button>
        </div>
    </form>
</div>

<script>
    let check = false;
    // 등록버튼을 누른 경우
    $(frm).on("submit", function (e) {
        e.preventDefault();
        
        const uid = $(frm.uid).val();
        const upass = $(frm.upass).val();
        const uname = $(frm.uname).val();
        const phone = $(frm.phone).val();
        const address1 = $(frm.address1).val();
        const address2 = $(frm.address2).val();

        // 데이터가 잘 들어왔는지(데이터베이스에서 id, pass를 not null로 설정했기 때문) 유효성체크
        if (uid == "") {
            alert("아이디를 입력하세요!");
            $(frm.uid).focus();
        } else if (check==false) { // 순서의 중요성!!! 
            alert("아이디 중복체크를 하세요!");

        } else if (upass == "") {
            alert("비밀번호를 입력하세요!");
            $(frm.upass).focus();
        } else {
            if(confirm("회원등록을 하시겠습니까?")) {
                frm.submit();
            }
        }
    });

    // 중복체크 버튼을 누른 경우
    $("#check").on("click", function() {
        const uid = $(frm.uid).val();
        if(uid=="") {
            alert("중복체크할 아이디를 입력하세요!");
            $(frm.uid).focus();
        } else {
            // 중복체크 - login에서 사용한 함수를 재활용
            $.ajax({
                type:"post",
                url:"/users/login",
                data:{uid:uid},
                success: function (data) {
                    if(data==0) {
                        alert("사용가능한 아이디입니다.");
                        check = true;
                    } else {
                        alert("이미 사용중인 아이디입니다.");
                        $(frm.uid).focus();
                    }
                }
            });
        }
    });

    // 아이디 입력을 바꾼 경우
    $(frm.uid).on("change", function() {
        check = false;
    })

    // 주소검색 버튼을 클릭한 경우
    $("#search").on("click", function() {
        new daum.Postcode({
            oncomplete: function(data) {
                console.log(data);
                if(data.buildingName != "") { // 건물 이름이 있다면!!!
                    $(frm.address1).val(data.address + " (" + data.buildingName + ")");
                } else {
                    $(frm.address1).val(data.address);
                }
            }
        }).open();
    });
</script>

